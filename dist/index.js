import{fileURLToPath as t}from"url";import s from"fs";import e from"stream";import i from"debug";import r from"@jaredpalmer/wrapline";const h=i("indent-transformer"),a=i("indent-transformer:trace"),n=t("file:///workspaces/indent-transformer/src/index.js");let c=!1;const o=function(t){return t.replace(/^\s+/,"")},f={encoding:"utf-8",flush(t){for(;1<this.stack[0];)this.stack.shift(),c?this.push("DE99999 "):this.push("99999|DE ");t()},transform(t,s,e){this.stack=this.stack||[0];let i=[];const r=(t=t.toString()).matchAll(/.*\n/g);a("matches1="+r);for(const t of r){const s=t[0].substring(0,t[0].length-1);a("chunky=",s);const e=s.indexOf("|");a("indexOfPipe="+e);const r=s.substring(0,e);a("lineNo="+r);let n=s.substring(e+1);if(a("line=",n),n.trim().length>0){const t=n.match(/(  |\t)*/);if(a("matches=",t),t){let s=t[0].toString().length;if(a("numOfSpaces="+s+", this.stack[0]="+this.stack[0]+", this.stack=",this.stack),s>this.stack[0])this.stack.unshift(s),c?i.push("IN"+r+" "+o(n)):i.push((r.length?r+"|":"")+"IN "+o(n));else if(s<this.stack[0]){for(a("before shift: this.stack=",this.stack),a("numOfSpaces < this.stack[1]",s<this.stack[1]);s<this.stack[1];)a("inside while loop"),this.stack.shift(),c?i.push("DE"+r+" "):i.push((r.length?r+"|":"")+"DE");a("exited while loop"),this.stack.shift(),c?i.push("DE"+r+" "+o(n)):i.push((r.length?r+"|":"")+"DE "+o(n)),a("after shift: this.stack=",this.stack),a("after shift: ret=",i)}else c?i.push("NO"+r+" "+o(n)):i.push((r.length?r+"|":"")+"NO "+o(n))}}if(this.ended)for(;0<this.stack[0];)a("before shift: this.stack=",this.stack),this.stack.shift(),a("after shift: this.stack=",this.stack),c?i.push("DE"+r+" "):i.push((r.length?r+"|":"")+"DE");h("returning="+i.join(""));let f=!0;i.forEach((t=>{f?(this.push(t),f=!1):this.push(t)})),i=[]}e()}};if(process.argv[1]==n){const t=s.createReadStream(process.argv[2]);let i;e.finished(t,(t=>{t?console.error("Stream failed",t):f.ended=!0})),process.argv[3]&&"-"!=process.argv[3]?(i=s.createWriteStream(process.argv[3]),h("outStream = file "+process.argv[3])):(i=process.stdout,h("outStream = process.stdout")),c=!process.argv[4]||"true"!=process.argv[4],t.pipe(r("|")).pipe(r((function(t,s){return(t=t||0)+1}))).pipe(new e.Transform(f)).pipe(i)}var p=t=>(c=!Object.assign({},t).lineNoPrecedesIndent,new e.Transform(f));export{p as default};
//# sourceMappingURL=index.js.map
