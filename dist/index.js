import{fileURLToPath as s}from"url";import t from"fs";import e from"stream";import i from"debug";import r from"@jaredpalmer/wrapline";const h=i("indent-transformer"),a=s("file:///workspaces/indent-transformer/src/index.js");let c=!1;const n=function(s){return s.replace(/^\s+/,"")},o={encoding:"utf-8",flush(s){for(;1<this.stack[0];)this.stack.shift(),c?this.push("DE99999 "):this.push("99999|DE ");s()},transform(s,t,e){this.stack=this.stack||[0];let i=[];const r=(s=s.toString()).matchAll(/.*\n/g);h("matches1="+r);for(const s of r){const t=s[0].substring(0,s[0].length-1);h("chunky=",t);const e=t.indexOf("|");h("indexOfPipe="+e);const r=t.substring(0,e);h("lineNo="+r);let a=t.substring(e+1);if(h("line=",a),a.trim().length>0){const s=a.match(/(  |\t)*/);if(h("matches=",s),s){let t=s[0].toString().length;if(h("numOfSpaces="+t+", this.stack[0]="+this.stack[0]+", this.stack=",this.stack),t>this.stack[0])this.stack.unshift(t),c?i.push("IN"+r+" "+n(a)):i.push((r.length?r+"|":"")+"IN "+n(a));else if(t<this.stack[0]){for(h("before shift: this.stack=",this.stack),h("numOfSpaces < this.stack[1]",t<this.stack[1]);t<this.stack[1];)h("inside while loop"),this.stack.shift(),c?i.push("DE"+r+" "):i.push((r.length?r+"|":"")+"DE");h("exited while loop"),this.stack.shift(),c?i.push("DE"+r+" "+n(a)):i.push((r.length?r+"|":"")+"DE "+n(a)),h("after shift: this.stack=",this.stack),h("after shift: ret=",i)}else c?i.push("NO"+r+" "+n(a)):i.push((r.length?r+"|":"")+"NO "+n(a))}}if(this.ended)for(;0<this.stack[0];)h("before shift: this.stack=",this.stack),this.stack.shift(),h("after shift: this.stack=",this.stack),c?i.push("DE"+r+" "):i.push((r.length?r+"|":"")+"DE");h("returning="+i.join(""));let o=!0;i.forEach((s=>{o?(this.push(s),o=!1):this.push(s)})),i=[]}e()}};if(process.argv[1]==a){const s=t.createReadStream(process.argv[2]);let i;e.finished(s,(s=>{s?console.error("Stream failed",s):o.ended=!0})),process.argv[3]&&"-"!=process.argv[3]?(i=t.createWriteStream(process.argv[3]),h("outStream = file "+process.argv[3])):(i=process.stdout,h("outStream = process.stdout")),c=!process.argv[4]||"true"!=process.argv[4],s.pipe(r("|")).pipe(r((function(s,t){return(s=s||0)+1}))).pipe(new e.Transform(o)).pipe(i)}var f=s=>(c=!Object.assign({},s).lineNoPrecedesIndent,new e.Transform(o));export{f as default};
//# sourceMappingURL=index.js.map
